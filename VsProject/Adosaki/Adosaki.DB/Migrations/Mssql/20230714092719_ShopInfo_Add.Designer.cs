// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelsDB;

#nullable disable

namespace Adosaki.DB.Migrations.Mssql
{
    [DbContext(typeof(ModelsDbContext_Mssql))]
    [Migration("20230714092719_ShopInfo_Add")]
    partial class ShopInfo_Add
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ModelsDB.Shop", b =>
                {
                    b.Property<int>("idShop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idShop"), 1L, 1);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idShop");

                    b.ToTable("Shop");

                    b.HasData(
                        new
                        {
                            idShop = 1,
                            PasswordHash = "1111",
                            SignName = "root"
                        },
                        new
                        {
                            idShop = 2,
                            PasswordHash = "1111",
                            SignName = "admin"
                        });
                });

            modelBuilder.Entity("ModelsDB.ShopInfo", b =>
                {
                    b.Property<int>("idShopInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idShopInfo"), 1L, 1);

                    b.Property<string>("ViewName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idShop")
                        .HasColumnType("int");

                    b.HasKey("idShopInfo");

                    b.ToTable("ShopInfo");

                    b.HasData(
                        new
                        {
                            idShopInfo = 1,
                            ViewName = "개발자",
                            idShop = 1
                        },
                        new
                        {
                            idShopInfo = 2,
                            ViewName = "최고 관리자",
                            idShop = 2
                        });
                });

            modelBuilder.Entity("ModelsDB.ShopInfo_Detail1", b =>
                {
                    b.Property<int>("idShopInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idShopInfo"), 1L, 1);

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idShop")
                        .HasColumnType("int");

                    b.HasKey("idShopInfo");

                    b.ToTable("ShopInfo_Detail1");

                    b.HasData(
                        new
                        {
                            idShopInfo = 1,
                            BankAccount = "111-333-333",
                            BankName = "어른이 은행",
                            idShop = 1
                        },
                        new
                        {
                            idShopInfo = 2,
                            BankAccount = "111-2222-333",
                            BankName = "어른이 은행",
                            idShop = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
